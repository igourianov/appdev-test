@{
    ViewBag.Title = "Product Rating";
}

<p>Implement a 5 star product rating widget.</p>

<ul>
    <li>Make it look like Amazon or Ebay product rating (5 stars in a row)</li>
    <li>Use following sprites: <img src="~/Content/star_empty.png" /> <img src="~/Content/star_filled.png" /></li>
    <li>Initially display value of 3.33 / 5, so that 3 stars display filled and 4th star is 33% filled</li>
    <li>
        Make control change it's value on click
        <ul>
            <li>I.e. if user clicks on the second star, change display value to 2 / 5</li>
            <li>No need to support partial star values for this</li>
        </ul>
    </li>
    <li>You can use jQuery</li>
</ul>

<hr />

<div>
    <ul id="empty-star-box"></ul>
    <ul id="star-box"></ul>
</div>

@section scripts {
    <script>
        const NUM_STARS = 5;
        const FACTOR = 1 / 3;
        const DEFAULT_FILL = 3.33;

        const setup = startingFill => {
            for (let i = 0; i < NUM_STARS; i++) {
                $("#empty-star-box").append(`<li>
                                                 <div id='base` + i + `' class='star'></div>
                                             </li>`);
                $("#star-box").append(`<li>
                                           <div id='` + i + `' class='star-filled'></div>
                                       </li>`);
                $("#" + i).hide();
            }
            let j = 0;
            for (let i = startingFill; i > 0; i--) {
                if (j > NUM_STARS) {
                    break;
                }
                $("#" + j).show();
                j++;
            }
            partialFill(3, FACTOR);
            for (let i = 0; i < NUM_STARS; i++) {
                $("#base" + i).click(() => fillAllFrom(i));
                $("#" + i).click(() => fillAllFrom(i));
            }
        };

        const fillAllFrom = (maxFill, factor = FACTOR) => {
            for (let i = 0; i < NUM_STARS; i++) {
                if ($("#" + i).hasClass("smallified")) {
                    let width = $("#" + i).width();
                    $("#" + i).css("width", width / factor);
                    $("#" + i).removeClass("smallified");
                }
                i > maxFill ? $("#" + i).hide() : $("#" + i).show()
                
            }
        };

        const partialFill = (idToFill, factor) => {
            let width = $("#" + idToFill).width();
            $("#" + idToFill).css("width", width * factor);
            $("#" + idToFill).addClass("smallified");
        };

        setup(DEFAULT_FILL);
    </script>
}
